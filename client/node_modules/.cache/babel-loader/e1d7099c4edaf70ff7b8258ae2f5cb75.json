{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nexport default class DeviceStore {\n  constructor() {\n    this._types = void 0;\n    this._brands = void 0;\n    this._devices = void 0;\n    this._selectedType = void 0;\n    this._selectedBrand = void 0;\n    this._types = {};\n    this._brands = {};\n    this._devices = {};\n    this._selectedType = {\n      id: null,\n      name: null\n    };\n    this._selectedBrand = {\n      id: null,\n      name: null\n    };\n    makeAutoObservable(this);\n  }\n\n  setTypes(types) {\n    if (!this._types.rows) {\n      this._types = types;\n    }\n\n    if (this._types.rows === types.ro) this._types = {\n      count: types.count,\n      rows: [...this._types.rows, ...types.rows]\n    };\n  }\n\n  setBrands(brands) {\n    var _this$_brands$rows;\n\n    this._brands = {\n      count: brands.count,\n      rows: (_this$_brands$rows = this._brands.rows) === null || _this$_brands$rows === void 0 ? void 0 : _this$_brands$rows.concat(brands.rows)\n    };\n  }\n\n  setDevices(devices) {\n    this._devices = devices;\n  }\n\n  setSelectedType(type) {\n    this._selectedType = type;\n  }\n\n  setSelectedBrand(brand) {\n    this._selectedBrand = brand;\n  }\n\n  get types() {\n    return this._types;\n  }\n\n  get devices() {\n    return this._devices;\n  }\n\n  get brands() {\n    return this._brands;\n  }\n\n  get selectedType() {\n    return this._selectedType;\n  }\n\n  get selectedBrand() {\n    return this._selectedBrand;\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","DeviceStore","constructor","_types","_brands","_devices","_selectedType","_selectedBrand","id","name","setTypes","types","rows","ro","count","setBrands","brands","concat","setDevices","devices","setSelectedType","type","setSelectedBrand","brand","selectedType","selectedBrand"],"sources":["/Users/apple/Documents/work/2022/fullstack-shop/client/src/store/deviceStore.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\n\ninterface IType {\n  id: number | null;\n  name: string | null;\n}\n\ninterface ITypes {\n  count?: number;\n  rows?: IType[];\n}\n\ninterface IBrand {\n  id: number | null;\n  name: string | null;\n}\n\ninterface IBrands {\n  count?: number;\n  rows?: IBrand[];\n}\n\ninterface IDevice {\n  id: number;\n  name: string;\n  price: number;\n  rating: number;\n  img: string;\n}\n\ninterface IDevices {\n  count?: number;\n  rows?: IDevice[];\n}\n\nexport default class DeviceStore {\n  _types: ITypes;\n  _brands: IBrands;\n  _devices: IDevices;\n  _selectedType: IType;\n  _selectedBrand: IBrand;\n\n  constructor() {\n    this._types = {};\n\n    this._brands = {};\n\n    this._devices = {};\n\n    this._selectedType = {\n      id: null,\n      name: null,\n    };\n\n    this._selectedBrand = {\n      id: null,\n      name: null,\n    };\n\n    makeAutoObservable(this);\n  }\n\n  setTypes(types: ITypes) {\n    if (!this._types.rows) {\n      this._types = types;\n    }\n    if (this._types.rows === types.ro)\n    this._types = {\n      count: types.count,\n      rows: [\n        ...(this._types.rows as Array<IType>),\n        ...(types.rows as Array<IType>),\n      ],\n    };\n  }\n\n  setBrands(brands: IBrands) {\n    this._brands = {\n      count: brands.count,\n      rows: this._brands.rows?.concat(brands.rows as Array<IType>),\n    };\n  }\n\n  setDevices(devices: IDevices) {\n    this._devices = devices;\n  }\n\n  setSelectedType(type: IType) {\n    this._selectedType = type;\n  }\n\n  setSelectedBrand(brand: IBrand) {\n    this._selectedBrand = brand;\n  }\n\n  get types() {\n    return this._types;\n  }\n\n  get devices() {\n    return this._devices;\n  }\n\n  get brands() {\n    return this._brands;\n  }\n\n  get selectedType() {\n    return this._selectedType;\n  }\n\n  get selectedBrand() {\n    return this._selectedBrand;\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AAmCA,eAAe,MAAMC,WAAN,CAAkB;EAO/BC,WAAW,GAAG;IAAA,KANdC,MAMc;IAAA,KALdC,OAKc;IAAA,KAJdC,QAIc;IAAA,KAHdC,aAGc;IAAA,KAFdC,cAEc;IACZ,KAAKJ,MAAL,GAAc,EAAd;IAEA,KAAKC,OAAL,GAAe,EAAf;IAEA,KAAKC,QAAL,GAAgB,EAAhB;IAEA,KAAKC,aAAL,GAAqB;MACnBE,EAAE,EAAE,IADe;MAEnBC,IAAI,EAAE;IAFa,CAArB;IAKA,KAAKF,cAAL,GAAsB;MACpBC,EAAE,EAAE,IADgB;MAEpBC,IAAI,EAAE;IAFc,CAAtB;IAKAT,kBAAkB,CAAC,IAAD,CAAlB;EACD;;EAEDU,QAAQ,CAACC,KAAD,EAAgB;IACtB,IAAI,CAAC,KAAKR,MAAL,CAAYS,IAAjB,EAAuB;MACrB,KAAKT,MAAL,GAAcQ,KAAd;IACD;;IACD,IAAI,KAAKR,MAAL,CAAYS,IAAZ,KAAqBD,KAAK,CAACE,EAA/B,EACA,KAAKV,MAAL,GAAc;MACZW,KAAK,EAAEH,KAAK,CAACG,KADD;MAEZF,IAAI,EAAE,CACJ,GAAI,KAAKT,MAAL,CAAYS,IADZ,EAEJ,GAAID,KAAK,CAACC,IAFN;IAFM,CAAd;EAOD;;EAEDG,SAAS,CAACC,MAAD,EAAkB;IAAA;;IACzB,KAAKZ,OAAL,GAAe;MACbU,KAAK,EAAEE,MAAM,CAACF,KADD;MAEbF,IAAI,wBAAE,KAAKR,OAAL,CAAaQ,IAAf,uDAAE,mBAAmBK,MAAnB,CAA0BD,MAAM,CAACJ,IAAjC;IAFO,CAAf;EAID;;EAEDM,UAAU,CAACC,OAAD,EAAoB;IAC5B,KAAKd,QAAL,GAAgBc,OAAhB;EACD;;EAEDC,eAAe,CAACC,IAAD,EAAc;IAC3B,KAAKf,aAAL,GAAqBe,IAArB;EACD;;EAEDC,gBAAgB,CAACC,KAAD,EAAgB;IAC9B,KAAKhB,cAAL,GAAsBgB,KAAtB;EACD;;EAEQ,IAALZ,KAAK,GAAG;IACV,OAAO,KAAKR,MAAZ;EACD;;EAEU,IAAPgB,OAAO,GAAG;IACZ,OAAO,KAAKd,QAAZ;EACD;;EAES,IAANW,MAAM,GAAG;IACX,OAAO,KAAKZ,OAAZ;EACD;;EAEe,IAAZoB,YAAY,GAAG;IACjB,OAAO,KAAKlB,aAAZ;EACD;;EAEgB,IAAbmB,aAAa,GAAG;IAClB,OAAO,KAAKlB,cAAZ;EACD;;AA9E8B"},"metadata":{},"sourceType":"module"}