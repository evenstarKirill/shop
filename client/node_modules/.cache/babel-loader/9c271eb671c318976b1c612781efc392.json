{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work/2022/fullstack-shop/client/src/components/Admin/Modals/EditModals/EditDeviceModal/EditDeviceModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Dropdown, Form, Modal } from 'react-bootstrap';\nimport { Context } from '../../../../..';\nimport { getTypes, getBrands, editDevice } from '../../../../../http/deviceApi';\nimport ModalWrapper from '../../../ModalWrapper/ModalWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeviceModal = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    show,\n    handleShow\n  } = _ref;\n  const {\n    device\n  } = useContext(Context);\n  console.log('device', device.brands.rows.find(brand => brand.id == device.selectedDevice.brandId).name); // console.log('device', device.brands.rows);\n  // console.log('device.selectedDevice.brandId', device.selectedDevice.brandId);\n\n  const [deviceState, setDeviceState] = useState({\n    name: '',\n    price: 0,\n    file: '',\n    brandId: '',\n    brandName: '',\n    typeId: '',\n    typeName: ''\n  });\n  useEffect(() => {\n    getTypes().then(data => device.setTypes(data));\n    getBrands().then(data => device.setBrands(data));\n    setDeviceState({\n      name: device.selectedDevice.name || '',\n      price: device.selectedDevice.price || 0,\n      file: '',\n      brandId: '',\n      brandName: device.selectedDevice && device.brands.rows.find(brand => brand.id == device.selectedDevice.brandId).name || '',\n      typeId: '',\n      typeName: device.selectedDevice && device.types.rows.find(type => type.id == device.selectedDevice.typeId).name || ''\n    });\n  }, [show]);\n\n  const selectFile = e => {\n    setDeviceState(prevValue => ({ ...prevValue,\n      file: e.target.files[0]\n    }));\n  };\n\n  const edit = id => {\n    const formData = new FormData();\n    formData.append('name', deviceState.name);\n    formData.append('price', `${deviceState.price}`);\n    formData.append('img', deviceState.file);\n    formData.append('brandId', deviceState.brandId);\n    formData.append('typeId', deviceState.typeId);\n    editDevice(id, formData).then(() => handleShow());\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalWrapper, {\n    show: show,\n    handleShow: handleShow,\n    name: \"Edit Device\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: deviceState.typeName || device.selectedDevice.type || 'Select type'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: device.types.rows && device.types.rows.map(type => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setDeviceState(prevValue => ({ ...prevValue,\n                typeId: type.id,\n                typeName: type.name\n              })),\n              children: type.name\n            }, type.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: deviceState.brandName || 'Select brand'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: device.brands.rows && device.brands.rows.map(brand => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setDeviceState(prevValue => ({ ...prevValue,\n                brandId: brand.id,\n                brandName: brand.name\n              })),\n              children: brand.name\n            }, brand.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => setDeviceState(prevValue => ({ ...prevValue,\n            name: e.target.value\n          })),\n          value: deviceState.name,\n          className: \"mt-3\",\n          placeholder: \"Add Name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => setDeviceState(prevValue => ({ ...prevValue,\n            price: e.target.value\n          })),\n          className: \"mt-3\",\n          value: deviceState.price,\n          placeholder: \"Add Price...\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          type: \"file\",\n          onChange: selectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleShow,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: edit(device.selectedDevice.id),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}, \"JXE/YE9+99qLnj5L8qcBAj5qaNg=\")), \"JXE/YE9+99qLnj5L8qcBAj5qaNg=\");\n\n_c2 = EditDeviceModal;\nexport default EditDeviceModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditDeviceModal$observer\");\n$RefreshReg$(_c2, \"EditDeviceModal\");","map":{"version":3,"names":["observer","React","useContext","useEffect","useState","Button","Dropdown","Form","Modal","Context","getTypes","getBrands","editDevice","ModalWrapper","EditDeviceModal","show","handleShow","device","console","log","brands","rows","find","brand","id","selectedDevice","brandId","name","deviceState","setDeviceState","price","file","brandName","typeId","typeName","then","data","setTypes","setBrands","types","type","selectFile","e","prevValue","target","files","edit","formData","FormData","append","map","value"],"sources":["/Users/apple/Documents/work/2022/fullstack-shop/client/src/components/Admin/Modals/EditModals/EditDeviceModal/EditDeviceModal.tsx"],"sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, {\n  MouseEventHandler,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { Button, Dropdown, Form, Modal } from 'react-bootstrap';\n\nimport { Context } from '../../../../..';\nimport { getTypes, getBrands, editDevice } from '../../../../../http/deviceApi';\nimport ModalWrapper from '../../../ModalWrapper/ModalWrapper';\n\ninterface IProps {\n  show: boolean;\n  handleShow: () => void;\n}\n\ninterface IDeviceState {\n  name: string;\n  price: number;\n  file: string | Blob;\n  brandId: string;\n  brandName: string;\n  typeId: string;\n  typeName: string;\n}\n\nconst EditDeviceModal = observer(({ show, handleShow }: IProps) => {\n  const { device } = useContext(Context);\n\n  console.log(\n    'device',\n    device.brands.rows.find(\n      (brand: any) => brand.id == device.selectedDevice.brandId,\n    ).name,\n  );\n\n  // console.log('device', device.brands.rows);\n\n  // console.log('device.selectedDevice.brandId', device.selectedDevice.brandId);\n\n  const [deviceState, setDeviceState] = useState<IDeviceState>({\n    name: '',\n    price: 0,\n    file: '',\n    brandId: '',\n    brandName: '',\n    typeId: '',\n    typeName: '',\n  });\n\n  useEffect(() => {\n    getTypes().then((data) => device.setTypes(data));\n    getBrands().then((data) => device.setBrands(data));\n\n    setDeviceState({\n      name: device.selectedDevice.name || '',\n      price: device.selectedDevice.price || 0,\n      file: '',\n      brandId: '',\n      brandName:\n        (device.selectedDevice &&\n          device.brands.rows.find(\n            (brand: any) => brand.id == device.selectedDevice.brandId,\n          ).name) ||\n        '',\n      typeId: '',\n      typeName:\n        (device.selectedDevice &&\n          device.types.rows.find(\n            (type: any) => type.id == device.selectedDevice.typeId,\n          ).name) ||\n        '',\n    });\n  }, [show]);\n\n  const selectFile = (e: any) => {\n    setDeviceState((prevValue: any) => ({\n      ...prevValue,\n      file: e.target.files[0],\n    }));\n  };\n\n  const edit = (id: string) => {\n    const formData = new FormData();\n    formData.append('name', deviceState.name);\n    formData.append('price', `${deviceState.price}`);\n    formData.append('img', deviceState.file);\n    formData.append('brandId', deviceState.brandId);\n    formData.append('typeId', deviceState.typeId);\n    editDevice(id, formData).then(() => handleShow());\n  };\n\n  return (\n    <ModalWrapper show={show} handleShow={handleShow} name=\"Edit Device\">\n      <Modal.Body>\n        <Form>\n          <Dropdown>\n            <Dropdown.Toggle>\n              {deviceState.typeName ||\n                device.selectedDevice.type ||\n                'Select type'}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.types.rows &&\n                device.types.rows.map((type: any) => (\n                  <Dropdown.Item\n                    onClick={() =>\n                      setDeviceState((prevValue: any) => ({\n                        ...prevValue,\n                        typeId: type.id,\n                        typeName: type.name,\n                      }))\n                    }\n                    key={type.id}\n                  >\n                    {type.name}\n                  </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown className=\"mt-2\">\n            <Dropdown.Toggle>\n              {deviceState.brandName || 'Select brand'}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.brands.rows &&\n                device.brands.rows.map((brand: any) => (\n                  <Dropdown.Item\n                    onClick={() =>\n                      setDeviceState((prevValue: any) => ({\n                        ...prevValue,\n                        brandId: brand.id,\n                        brandName: brand.name,\n                      }))\n                    }\n                    key={brand.id}\n                  >\n                    {brand.name}\n                  </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Form.Control\n            onChange={(e) =>\n              setDeviceState((prevValue: IDeviceState) => ({\n                ...prevValue,\n                name: e.target.value,\n              }))\n            }\n            value={deviceState.name}\n            className=\"mt-3\"\n            placeholder=\"Add Name...\"\n          />\n          <Form.Control\n            onChange={(e) =>\n              setDeviceState((prevValue: any) => ({\n                ...prevValue,\n                price: e.target.value,\n              }))\n            }\n            className=\"mt-3\"\n            value={deviceState.price}\n            placeholder=\"Add Price...\"\n            type=\"number\"\n          />\n          <Form.Control className=\"mt-3\" type=\"file\" onChange={selectFile} />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleShow}>\n          Close\n        </Button>\n        <Button\n          variant=\"outline-success\"\n          onClick={\n            edit(device.selectedDevice.id) as\n              | MouseEventHandler<HTMLButtonElement>\n              | undefined\n          }\n        >\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </ModalWrapper>\n  );\n});\n\nexport default EditDeviceModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}