{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport isEqual from 'lodash.isequal';\nimport difference from 'lodash.difference';\nexport default class DeviceStore {\n  constructor() {\n    this._types = void 0;\n    this._brands = void 0;\n    this._devices = void 0;\n    this._selectedType = void 0;\n    this._selectedBrand = void 0;\n    this._selectedDevice = void 0;\n    this._types = {};\n    this._brands = {};\n    this._devices = {};\n    this._selectedType = {\n      id: null,\n      name: null\n    };\n    this._selectedBrand = {\n      id: null,\n      name: null\n    };\n    this._selectedDevice = {\n      id: null,\n      name: null,\n      price: null,\n      rating: null,\n      img: null\n    };\n    makeAutoObservable(this);\n  }\n\n  setTypes(types) {\n    if (!this._types.rows) {\n      this._types = types;\n    }\n\n    if (isEqual(this._types, types)) {\n      return;\n    }\n\n    if (difference(this._types, types).length === 0) {\n      return this._types = types;\n    }\n\n    this._types = {\n      count: types.count,\n      rows: [...this._types.rows, ...types.rows]\n    };\n  }\n\n  setBrands(brands) {\n    if (!this._brands.rows) {\n      this._brands = brands;\n    }\n\n    if (isEqual(this._brands, brands)) {\n      return;\n    }\n\n    this._brands = {\n      count: brands.count,\n      rows: [...this._brands.rows, ...brands.rows]\n    };\n  }\n\n  setDevices(devices) {\n    this._devices = devices;\n  }\n\n  setSelectedType(type) {\n    this._selectedType = type;\n  }\n\n  setSelectedBrand(brand) {\n    this._selectedBrand = brand;\n  }\n\n  setSelectedDevice(device) {\n    this._selectedDevice = device;\n  }\n\n  get types() {\n    return this._types;\n  }\n\n  get devices() {\n    return this._devices;\n  }\n\n  get brands() {\n    return this._brands;\n  }\n\n  get selectedType() {\n    return this._selectedType;\n  }\n\n  get selectedBrand() {\n    return this._selectedBrand;\n  }\n\n  get selectedDevice() {\n    return this._selectedDevice;\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","isEqual","difference","DeviceStore","constructor","_types","_brands","_devices","_selectedType","_selectedBrand","_selectedDevice","id","name","price","rating","img","setTypes","types","rows","length","count","setBrands","brands","setDevices","devices","setSelectedType","type","setSelectedBrand","brand","setSelectedDevice","device","selectedType","selectedBrand","selectedDevice"],"sources":["/Users/apple/Documents/work/2022/fullstack-shop/client/src/store/deviceStore.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport isEqual from 'lodash.isequal';\nimport difference from 'lodash.difference';\n\ninterface IType {\n  id: number | null;\n  name: string | null;\n}\n\ninterface ITypes {\n  count?: number;\n  rows?: IType[];\n}\n\ninterface IBrand {\n  id: number | null;\n  name: string | null;\n}\n\ninterface IBrands {\n  count?: number;\n  rows?: IBrand[];\n}\n\ninterface IDevice {\n  id: number | null;\n  name: string | null;\n  price: number | null;\n  rating: number | null;\n  img: string | null;\n}\n\ninterface IDevices {\n  count?: number;\n  rows?: IDevice[];\n}\n\nexport default class DeviceStore {\n  _types: ITypes;\n  _brands: IBrands;\n  _devices: IDevices;\n  _selectedType: IType;\n  _selectedBrand: IBrand;\n  _selectedDevice: IDevice;\n\n  constructor() {\n    this._types = {};\n\n    this._brands = {};\n\n    this._devices = {};\n\n    this._selectedType = {\n      id: null,\n      name: null,\n    };\n\n    this._selectedBrand = {\n      id: null,\n      name: null,\n    };\n\n    this._selectedDevice = {\n      id: null,\n      name: null,\n      price: null,\n      rating: null,\n      img: null,\n    };\n\n    makeAutoObservable(this);\n  }\n\n  setTypes(types: ITypes) {\n    if (!this._types.rows) {\n      this._types = types;\n    }\n\n    if (isEqual(this._types, types)) {\n      return;\n    }\n\n    if (\n      difference(this._types as ArrayLike<ITypes>, types as ArrayLike<ITypes>)\n        .length === 0\n    ) {\n      return (this._types = types);\n    }\n\n    this._types = {\n      count: types.count,\n      rows: [\n        ...(this._types.rows as Array<IType>),\n        ...(types.rows as Array<IType>),\n      ],\n    };\n  }\n\n  setBrands(brands: IBrands) {\n    if (!this._brands.rows) {\n      this._brands = brands;\n    }\n\n    if (isEqual(this._brands, brands)) {\n      return;\n    }\n\n    this._brands = {\n      count: brands.count,\n      rows: [\n        ...(this._brands.rows as Array<IBrand>),\n        ...(brands.rows as Array<IBrand>),\n      ],\n    };\n  }\n\n  setDevices(devices: IDevices) {\n    this._devices = devices;\n  }\n\n  setSelectedType(type: IType) {\n    this._selectedType = type;\n  }\n\n  setSelectedBrand(brand: IBrand) {\n    this._selectedBrand = brand;\n  }\n\n  setSelectedDevice(device: IDevice) {\n    this._selectedDevice = device;\n  }\n\n  get types() {\n    return this._types;\n  }\n\n  get devices() {\n    return this._devices;\n  }\n\n  get brands() {\n    return this._brands;\n  }\n\n  get selectedType() {\n    return this._selectedType;\n  }\n\n  get selectedBrand() {\n    return this._selectedBrand;\n  }\n\n  get selectedDevice() {\n    return this._selectedDevice;\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAmCA,eAAe,MAAMC,WAAN,CAAkB;EAQ/BC,WAAW,GAAG;IAAA,KAPdC,MAOc;IAAA,KANdC,OAMc;IAAA,KALdC,QAKc;IAAA,KAJdC,aAIc;IAAA,KAHdC,cAGc;IAAA,KAFdC,eAEc;IACZ,KAAKL,MAAL,GAAc,EAAd;IAEA,KAAKC,OAAL,GAAe,EAAf;IAEA,KAAKC,QAAL,GAAgB,EAAhB;IAEA,KAAKC,aAAL,GAAqB;MACnBG,EAAE,EAAE,IADe;MAEnBC,IAAI,EAAE;IAFa,CAArB;IAKA,KAAKH,cAAL,GAAsB;MACpBE,EAAE,EAAE,IADgB;MAEpBC,IAAI,EAAE;IAFc,CAAtB;IAKA,KAAKF,eAAL,GAAuB;MACrBC,EAAE,EAAE,IADiB;MAErBC,IAAI,EAAE,IAFe;MAGrBC,KAAK,EAAE,IAHc;MAIrBC,MAAM,EAAE,IAJa;MAKrBC,GAAG,EAAE;IALgB,CAAvB;IAQAf,kBAAkB,CAAC,IAAD,CAAlB;EACD;;EAEDgB,QAAQ,CAACC,KAAD,EAAgB;IACtB,IAAI,CAAC,KAAKZ,MAAL,CAAYa,IAAjB,EAAuB;MACrB,KAAKb,MAAL,GAAcY,KAAd;IACD;;IAED,IAAIhB,OAAO,CAAC,KAAKI,MAAN,EAAcY,KAAd,CAAX,EAAiC;MAC/B;IACD;;IAED,IACEf,UAAU,CAAC,KAAKG,MAAN,EAAmCY,KAAnC,CAAV,CACGE,MADH,KACc,CAFhB,EAGE;MACA,OAAQ,KAAKd,MAAL,GAAcY,KAAtB;IACD;;IAED,KAAKZ,MAAL,GAAc;MACZe,KAAK,EAAEH,KAAK,CAACG,KADD;MAEZF,IAAI,EAAE,CACJ,GAAI,KAAKb,MAAL,CAAYa,IADZ,EAEJ,GAAID,KAAK,CAACC,IAFN;IAFM,CAAd;EAOD;;EAEDG,SAAS,CAACC,MAAD,EAAkB;IACzB,IAAI,CAAC,KAAKhB,OAAL,CAAaY,IAAlB,EAAwB;MACtB,KAAKZ,OAAL,GAAegB,MAAf;IACD;;IAED,IAAIrB,OAAO,CAAC,KAAKK,OAAN,EAAegB,MAAf,CAAX,EAAmC;MACjC;IACD;;IAED,KAAKhB,OAAL,GAAe;MACbc,KAAK,EAAEE,MAAM,CAACF,KADD;MAEbF,IAAI,EAAE,CACJ,GAAI,KAAKZ,OAAL,CAAaY,IADb,EAEJ,GAAII,MAAM,CAACJ,IAFP;IAFO,CAAf;EAOD;;EAEDK,UAAU,CAACC,OAAD,EAAoB;IAC5B,KAAKjB,QAAL,GAAgBiB,OAAhB;EACD;;EAEDC,eAAe,CAACC,IAAD,EAAc;IAC3B,KAAKlB,aAAL,GAAqBkB,IAArB;EACD;;EAEDC,gBAAgB,CAACC,KAAD,EAAgB;IAC9B,KAAKnB,cAAL,GAAsBmB,KAAtB;EACD;;EAEDC,iBAAiB,CAACC,MAAD,EAAkB;IACjC,KAAKpB,eAAL,GAAuBoB,MAAvB;EACD;;EAEQ,IAALb,KAAK,GAAG;IACV,OAAO,KAAKZ,MAAZ;EACD;;EAEU,IAAPmB,OAAO,GAAG;IACZ,OAAO,KAAKjB,QAAZ;EACD;;EAES,IAANe,MAAM,GAAG;IACX,OAAO,KAAKhB,OAAZ;EACD;;EAEe,IAAZyB,YAAY,GAAG;IACjB,OAAO,KAAKvB,aAAZ;EACD;;EAEgB,IAAbwB,aAAa,GAAG;IAClB,OAAO,KAAKvB,cAAZ;EACD;;EAEiB,IAAdwB,cAAc,GAAG;IACnB,OAAO,KAAKvB,eAAZ;EACD;;AArH8B"},"metadata":{},"sourceType":"module"}