{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work/2022/fullstack-shop/client/src/components/TypeBar/TypeBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { ListGroup } from 'react-bootstrap';\nimport { Context } from '../..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TypeBar = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  console.log('device.types.rows', device);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: device.types.rows && device.types.rows.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => device.setSelectedType(type),\n      active: type.id === device.selectedType.id,\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}, \"OFJwJETkh/v32tNXsuGFzaMBUfI=\")), \"OFJwJETkh/v32tNXsuGFzaMBUfI=\");\n\n_c2 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"names":["React","useContext","observer","ListGroup","Context","TypeBar","device","console","log","types","rows","map","type","cursor","setSelectedType","id","selectedType","name"],"sources":["/Users/apple/Documents/work/2022/fullstack-shop/client/src/components/TypeBar/TypeBar.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { ListGroup } from 'react-bootstrap';\n\nimport { Context } from '../..';\n\nconst TypeBar = observer(() => {\n  const { device } = useContext(Context);\n\n  console.log('device.types.rows', device);\n\n  return (\n    <ListGroup>\n      {device.types.rows &&\n        device.types.rows.map((type: any) => (\n          <ListGroup.Item\n            style={{ cursor: 'pointer' }}\n            onClick={() => device.setSelectedType(type)}\n            active={type.id === device.selectedType.id}\n            key={type.id}\n          >\n            {type.name}\n          </ListGroup.Item>\n        ))}\n    </ListGroup>\n  );\n});\n\nexport default TypeBar;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SAASC,OAAT,QAAwB,OAAxB;;;AAEA,MAAMC,OAAO,MAAGH,QAAQ,SAAC,MAAM;EAAA;;EAC7B,MAAM;IAAEI;EAAF,IAAaL,UAAU,CAACG,OAAD,CAA7B;EAEAG,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,MAAjC;EAEA,oBACE,QAAC,SAAD;IAAA,UACGA,MAAM,CAACG,KAAP,CAAaC,IAAb,IACCJ,MAAM,CAACG,KAAP,CAAaC,IAAb,CAAkBC,GAAlB,CAAuBC,IAAD,iBACpB,QAAC,SAAD,CAAW,IAAX;MACE,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAV,CADT;MAEE,OAAO,EAAE,MAAMP,MAAM,CAACQ,eAAP,CAAuBF,IAAvB,CAFjB;MAGE,MAAM,EAAEA,IAAI,CAACG,EAAL,KAAYT,MAAM,CAACU,YAAP,CAAoBD,EAH1C;MAAA,UAMGH,IAAI,CAACK;IANR,GAIOL,IAAI,CAACG,EAJZ;MAAA;MAAA;MAAA;IAAA,QADF;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CApBuB,kCAAX,iCAAb;;MAAMV,O;AAsBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}